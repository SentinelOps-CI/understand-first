name: Accessibility Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"

jobs:
  accessibility-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm install -g @axe-core/cli
          npm install -g pa11y
          npm install -g lighthouse

      - name: Start web server
        run: |
          cd web_demo
          python -m http.server 8000 &
          sleep 5

      - name: Run axe-core accessibility tests
        run: |
          axe http://localhost:8000 --exit
        continue-on-error: true

      - name: Run pa11y accessibility tests
        run: |
          pa11y --standard WCAG2AA http://localhost:8000
        continue-on-error: true

      - name: Run Lighthouse accessibility audit
        run: |
          lighthouse http://localhost:8000 --only-categories=accessibility --output=json --output-path=./lighthouse-accessibility.json
        continue-on-error: true

      - name: Run custom accessibility validator
        run: |
          node -e "
          const puppeteer = require('puppeteer');
          (async () => {
            const browser = await puppeteer.launch();
            const page = await browser.newPage();
            await page.goto('http://localhost:8000');
            
            // Run custom accessibility validation
            const results = await page.evaluate(() => {
              if (window.accessibilityValidator) {
                return window.accessibilityValidator.getReport();
              }
              return { error: 'Accessibility validator not found' };
            });
            
            console.log('Accessibility Report:', JSON.stringify(results, null, 2));
            
            if (results.errors > 0) {
              console.error('Accessibility errors found:', results.errors);
              process.exit(1);
            }
            
            await browser.close();
          })();
          "
        continue-on-error: true

      - name: Upload accessibility reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-reports
          path: |
            lighthouse-accessibility.json
            pa11y-results.json

      - name: Comment on PR with accessibility results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let comment = '## üîç Accessibility Test Results\n\n';

            try {
              const lighthouse = JSON.parse(fs.readFileSync('lighthouse-accessibility.json', 'utf8'));
              const score = Math.round(lighthouse.categories.accessibility.score * 100);
              comment += `### Lighthouse Accessibility Score: ${score}/100\n\n`;
              
              if (score < 90) {
                comment += '‚ö†Ô∏è **Warning**: Accessibility score is below 90. Please review and fix accessibility issues.\n\n';
              } else {
                comment += '‚úÖ **Good**: Accessibility score meets the target of 90+.\n\n';
              }
            } catch (error) {
              comment += '‚ùå **Error**: Could not load Lighthouse accessibility results.\n\n';
            }

            comment += '### Next Steps\n';
            comment += '- Review the accessibility reports in the artifacts\n';
            comment += '- Fix any critical accessibility issues\n';
            comment += '- Test with screen readers and keyboard navigation\n';
            comment += '- Ensure color contrast meets WCAG AA standards\n\n';
            comment += 'For more information, see our [accessibility guidelines](https://github.com/SentinelOps-CI/understand-first/blob/main/docs/accessibility.md).';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
